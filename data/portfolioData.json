[
  {
    "IMAGE": "/assets/img/friends-img.png",
    "SQUARE": "/assets/img/fnds-square-2.png",
    "NAME": "The Friends Experience",

    "SUBHEAD": "Principal Engineer",
    "DESCRIPTION": "Building a webapp that can scale to global markets.",
    "ALT": "The Friends Experience",
    "LINK": "/project1",
    "ICONS": [
      {
        "javaScript": true,
        "vue": true,
        "nuxt": true
      }
    ],
    "SUBNAV": [
      {
        "IMAGE": "/assets/img/friends-img.png",
        "NAME": "The Friends Experience",
        "HERO": "Building a webapp that can scale to global markets.",
        "SUBHEAD": "Principal Engineer",
        "ICONS": [
          {
            "javaScript": true,
            "vue": true,
            "nuxt": true
          }
        ],
        "DESCRIPTION": "The Friends Experience is an experiential event run across the country, and soon across the world. As a result it requires a robust Vue based web app. <br/><br/> As a result, this web app dictates itself in an entirely data driven way. By utilizing Netlify's headless CMS, pages and posts can be added using simple JSON data. That being said, there are very few components to this page, yet those components consist of an organized tree of terinary operations that allow the site to seamlessly build based on the JSON data. As a result, whole micro sites can be built based off of a small subset of data. The site was designed this way to allow my team to both edit the site, and add new markets when need be.",
        "TECHHEADER": "Database architecture",
        "TECHDESCRIPTION": "On top of a robust CMS, this site has a serverless AWS back-end for storing user information. Based on our emerging markets, we have functions that tie email signups based on routes, or by user choice. <br /><br />Currently we have markets from around the world. In order to properly filter this information, I had to create a function that sends \"tags\" from our front end to our back end. These tags are then filtered to our three different databases. The Tradable Bits CRM takes this data in and analyzes it against other customers. The Mailchimp API inputs our data and organizes it into localized data, allowing for email automation to be triggered by this same function. Finally, I have a function that saves this information with it's approriate tag metadata save to a SQL DynamoDB database as a backup",
        "TECHIMG": "/assets/img/Friends-diagram.png",
        "FOOTERIMG": "/assets/img/fnds-logo.png",
        "GITHUBHEADER": "See more about the project.",
        "SITELINK": "https://www.friendstheexperience.com/"
      }
    ]
  },
  {
    "IMAGE": "/assets/img/office-img.png",
    "SQUARE": "/assets/img/office-square-v3.png",
    "NAME": "The Office Experience",

    "SUBHEAD": "Principal Engineer",
    "DESCRIPTION": "Investigating converting a Vue based workplace to React",
    "ALT": "The Office Experience",
    "LINK": "/project2",
    "ICONS": [
      {
        "javaScript": true,
        "next": true,
        "isReact": true
      }
    ],
    "SUBNAV": [
      {
        "IMAGE": "/assets/img/office-img.png",
        "NAME": "The Office Experience",
        "HERO": "Investigating converting a Vue based workplace to React",
        "SUBHEAD": "Principal Engineer",
        "ICONS": [
          {
            "javaScript": true,
            "next": true,
            "isReact": true
          }
        ],
        "DESCRIPTION": "The Office Experience is an experiential event run across the country. As a result it requires a robust Next.JS based web app. <br/><br/> One of the key problems I was tasked to solve in coming into this project, is to build a webApp based entirely on React architecture. Previously Superfly had only built apps in Vue, but expressed they wanted to explore React and Next.JS in particular. This was due to it's popularity, meaning a project could potentially be built faster due to a larger amount of documentation being available on the internet. <br/><br />Tasked with a short deadline, and feedback from both UX designers and the client, we eventually sucessfully launched a site that bent what I had previously thought I could create with CSS and JavaScript.",
        "TECHHEADER": "Database architecture",
        "TECHDESCRIPTION": "On top of a robust CMS, this site has a serverless AWS back-end for storing user information.  <br /><br />I had to create a function that sends \"tags\" from our front end to our back end. These tags are then filtered to our three different databases. The Tradable Bits CRM takes this data in and analyzes it against other customers. The Mailchimp API inputs our data and organizes it into localized data, allowing for email automation to be triggered by this same function. Finally, I have a function that saves this information with it's approriate tag metadata save to a SQL DynamoDB database as a backup",
        "TECHIMG": "/assets/img/TheOffice-diagram.png",
        "FOOTERIMG": "/assets/img/TOE-logo.png",
        "GITHUBHEADER": "See more about the project.",
        "SITELINK": "https://www.theofficeexperience.com/"
      }
    ]
  },
  {
    "IMAGE": "/assets/img/OSL-wide.png",
    "SQUARE": "/assets/img/OSL-square.png",
    "NAME": "Outside Lands Music Festival",

    "SUBHEAD": "Principal Engineer",
    "DESCRIPTION": "Building a webapp that can scale to global markets.",
    "ALT": "Outside Lands",
    "LINK": "/project3",
    "ICONS": [
      {
        "javaScript": true,
        "vue": true
      }
    ],
    "SUBNAV": [
      {
        "IMAGE": "/assets/img/OSL-wide.png",
        "NAME": "Outside Lands Music Festival",
        "HERO": "Building a webapp that can scale to global markets.",
        "SUBHEAD": "Principal Engineer",
        "ICONS": [
          {
            "javaScript": true,
            "vue": true
          }
        ],
        "DESCRIPTION": "After going through a site redeisgn a year prior, Superfly tasked me to modify this Vue based app for the 2021 Outside Lands music festival in San Francisco. <br/><br/> The site had had a major overhaul when I was handed it, but the actual framework was doen in an old version of Vue and Ruby. As a result it was difficult for new engineers to boot up, and extremely slow to edit. <br/><br/> Despite these limitations, I was able to modify the site's headless CMS to make editing without diving into Vue a little easier. This made copy changes quicker and less likely to crash the site. Further, I implemented a custom API for restaurants, breweries, and wineries that were being showcased at the festival. Using some complex JavaScript functions, I was able to make an application that served users with a randomized selection of restaurants, bars, and wineries upon visiting their respective pages. <br/><br/> Further the back end architecture of the site challenged me to capture emails, zip codes, and phone numbers of hundreds of thousands of fans.<br/><br /> Despite having a schedule that made almost required to make these edits live as announcements and shows were happening, I delivered without issue to the festival. This was especially evident when some artists dropped off the lineup, and required me to make drastic changes to the site in real time, thus proving the efficiency of my code writing on site.",
        "TECHHEADER": "Database Architecture",
        "TECHDESCRIPTION": "On top of a robust CMS, this site has a serverless AWS back-end for storing user information.  <br /><br />I had to create a function that sends \"tags\" from our front end to our back end. These tags are then filtered to our three different databases. The Tradable Bits CRM takes this data in and analyzes it against other customers. The Mailchimp API inputs our data and organizes it into localized data, allowing for email automation to be triggered by this same function. Finally, I have a function that saves this information with it's approriate tag metadata save to a SQL DynamoDB database as a backup. <br/><br/>What was unique about this data structure, is that instead of just capturing email data, I also had to capture Zip code and Phone number information to trigger text message automations.",
        "TECHIMG": "/assets/img/OSL-Diagram.png",
        "GITHUBHEADER": "See more about the project.",
        "FOOTERIMG": "/assets/img/osl-footer.png",
        "SITELINK": "http://2021.sfoutsidelands.com"
      }
    ]
  },
  {
    "IMAGE": "/assets/img/hero-galaxy-img.png",
    "SQUARE": "/assets/img/1x1-galaxy.jpg",
    "NAME": "Hero Galaxy NFT",

    "SUBHEAD": "Founding/Principal Engineer",
    "DESCRIPTION": "Building an NFT Marketplace that's both user friendly and stands out",
    "ALT": "Hero Galaxy Image",
    "LINK": "/project4",
    "ICONS": [
      {
        "javaScript": true,
        "next": true,
        "isReact": true
      }
    ],
    "SUBNAV": [
      {
        "IMAGE": "/assets/img/hero-galaxy-img.png",
        "NAME": "Hero Galaxy",
        "HERO": "Building an NFT Marketplace that's both user friendly and stands out",
        "SUBHEAD": "Principal Engineer",
        "ICONS": [
          {
            "javaScript": true,
            "next": true,
            "isReact": true
          }
        ],
        "DESCRIPTION": "After completing several successful and viral campaigns at various different agencies in my career, I caught the attention of an old friend who wanted to launch his own NFT collection. Knowing that the market was oversatured, he called on me and my product designer wife to help come up with an initial prototype and brainstorming session for what we could deliver.<br /><br /> We ended up with a cute, cartoon based website that was heavy on animations and interaction. Dragable and clickable elements that made the galaxy background scatter gave users easter eggs to find to get them access to a secret white list. <br /><br />Our site's slicker than usual design caught the eye of several discord groups, and our project quickly went viral. <br /><br />We sold out in less than 10 seconds.",
        "TECHHEADER": "Exploring Web3",
        "TECHDESCRIPTION": "This project challenged me to explore a technology and community I'd never come across before. Web3.js itself seemed daunting, and the technologies and APIs associated further complicated things. Even conceptualizing MetaMask, OpenSea, smart contracts, and test networks were complicated ideas to tackle, as they required me to relearn a lot of what I'd considered to be standard web development practices. As a team of engineers, we divided and conquered. <br /><br />On our soft launch with our white listed members, we had several UX problems. We lacked solid indication that you were signed in, and lacked error and success messages. In a 24 hour period I had to shape up and re-do our entire purchase flow just to give users an indication that their money went through correctly without having to dig into their MetaMask records. By the time the launch completed, the process was so seamless it fired like a large tech company's application would and we became larger than expected in our following. We now have several developers similarly interested in the project.<br/><br/>What happened afterward was a larger pivot. It was never supposed to be just an NFT drop, as we all knew that market was oversaturated. The master plan was to build a larger API that works off of Web3.JS, and also helps developers more quickly build Web3 applications and games. We knew just from entering this project that that's often a daunting task, and there was a real value proposition in making that easier. Hero Galaxy quickly became <a class='underline' href='https://www.utiliti.ai/' target='_blank'>utiliti.ai</a>, a company comrpised of many of the same team members that launched Hero Galaxy. ",
        "TECHIMG": "/assets/img/hero-galaxy-2.png",
        "GITHUBHEADER": "See more about the project",
        "GITHUBLINK": "https://github.com/Kiwi3p/hero-frontend",
        "SITELINK": "https://hero-galaxy.netlify.app/",
        "FOOTERIMG": "/assets/img/hero-galaxy-animated.gif"
      }
    ]
  },
  {
    "IMAGE": "/assets/img/google-banner-wide.png",
    "SQUARE": "/assets/img/google-banner-1-v3.png",
    "NAME": "Adobe Automator",
    "DARK": true,
    "SUBHEAD": "Inventor/Developer",
    "DESCRIPTION": "Can social ads be automated with simple AI?",
    "ALT": "Adobe Automator",
    "LINK": "/project5",
    "ICONS": [
      {
        "javaScript": true
      }
    ],
    "SUBNAV": [
      {
        "IMAGE": "/assets/img/google-banner-wide.png",
        "NAME": "Adobe Automator",
        "HERO": "Can social ads be automated with simple AI?",
        "SUBHEAD": "Inventor/Developer",
        "ICONS": [
          {
            "javaScript": true,
            "vue": true,
            "nuxt": true
          }
        ],
        "DESCRIPTION": "This is the project that started it all for me.<br /><br />After years of entertainment industry experience administrating and building out post production server hardware/software, our agency started getting requests for video adverstisments in large scale deliveries. This meant we needed animations, video edits, and exports to be done in several different markets at once. <br /><br />At first, our small team could get these videos done, but as the ask turned into thousands of social media assets per quarter, we were overwhelmed.<br /><br /> After some initial brainstorming, I read up on scripting within the Adobe Creative Cloud. It was a clear solution. After some initial trials, I brought a script through that could switch out images and text based on spreadsheet data. From there, the project was brought to our London development team. They added conditionals that anticipated videos, animations, and re-formatting text based on language (ie chinese vs latin characters). <br /><br />Eventually we were able to automate 10,000+ social media adds to over 20+ language regions worldwide per quarter.",
        "TECHHEADER": "Tech header example",
        "TECHDESCRIPTION": "This tech was more on the creative side. Dealing directly with process automation via scripting, the application would intake a Google Sheet handed to us by our clients. Based on a series of switch cases and conditionals, the application would filter through the cells of the sheet one by one. It would then read through our After Effects file and animation templates, switching out text, dimensions, assets(images, video, animation), and other features. Hours of busy work could be completed in a matter of seconds.",
        "TECHIMG": "/assets/img/banner-code.png",
        "GITHUBHEADER": "See more on github",
        "GITHUBLINK": "https://github.com/Kiwi3p/2020holiday_Presents_300x250",
        "SITELINK": "https://kiwi3p.github.io/2020holiday_Presents_300x250/",
        "FOOTERIMG": "/assets/img/byte-london.png"
      }
    ]
  },
  {
    "IMAGE": "/assets/img/google-banner-wide-2.png",
    "SQUARE": "/assets/img/google-banner-2-v3.png",
    "NAME": "Banner Automator",
    "DARK": false,
    "SUBHEAD": "Inventor/Developer",
    "DESCRIPTION": "Can banner ads be automated with simple AI?",
    "ALT": "Banner Ad Image",
    "LINK": "/project6",
    "ICONS": [
      {
        "javaScript": true
      }
    ],
    "SUBNAV": [
      {
        "IMAGE": "/assets/img/google-banner-wide-2.png",
        "NAME": "Adobe Automator",
        "HERO": "Can banner ads be automated with simple AI?",
        "SUBHEAD": "Inventor/Developer",
        "ICONS": [
          {
            "javaScript": true,
            "vue": true,
            "nuxt": true
          }
        ],
        "DESCRIPTION": "This is the project that started it all for me.<br /><br />After years of entertainment industry experience administrating and building out post production server hardware/software, our agency started getting requests for banner ad adverstisments in large scale deliveries. This meant we needed HTML based banner ads to be done in several different markets at once. <br /><br />At first, our small team could get this front end code done, but as the ask turned into thousands of assets per quarter, we were overwhelmed.<br /><br /> Based on my previous experience with creating an automator for our video assets via scripting, our head dev in London brought to attention the ability to do this same process via Node.js for HTML assets.",
        "TECHHEADER": "Tech header example",
        "TECHDESCRIPTION": "This tech was more on the creative side. Dealing directly with process automation via scripting, the application would intake a Google Sheet handed to us by our clients. Based on a series of switch cases and conditionals, the application would filter through the cells of the sheet one by one. It would then read through a series of basic banner ad templates, switching out text, dimensions, assets(images, video, animation), and other features. Hours of busy work could be completed in a matter of seconds.",
        "TECHIMG": "/assets/img/banner-code.png",
        "GITHUBHEADER": "See more on github",
        "GITHUBLINK": "https://github.com/Kiwi3p/2020holiday_Unwrappable_970x250",
        "SITELINK": "https://kiwi3p.github.io/2020holiday_Unwrappable_970x250/",
        "FOOTERIMG": "/assets/img/byte-london.png"
      }
    ]
  }
]
